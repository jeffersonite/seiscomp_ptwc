# Define a list of message groups to subscribe to. The default is usually given
# by the application and does not need to be changed.
connection.subscriptions = LOCATION, LOCATION_HI, MAGNITUDE, FOCMECH, EVENT

# Prefix for all Event IDs
eventIDPrefix = "pt"

# Defines the pattern to generate an event ID.
# %p : prefix
# %Y : year
# %[w]c: alpha character
# %[w]C: upper case alpha character
# %[w]d: decimal
# %[w]x: hexadecimal
# %[w]X: upper case hexadecimal
# [w] is an optional width parameter.
eventIDPattern = "%p%Y%06d"

# Minimum number of Picks for an Origin that is automatic and cannot be
# associated with an Event to be allowed to form an new Event.
eventAssociation.minimumDefiningPhases = 1

# Minimum number of matching picks between two Origins to be associated to the
# same event.
eventAssociation.minimumMatchingArrivals = 1

# Negative time window: compare only pickIDs to find matching arrivals. A non
# negative value (including 0) compares pick times regardless of the pickID.
# Pass: |pick1.time - pick2.time| <= threshold
eventAssociation.maximumMatchingArrivalTimeDiff = 5

# This parameter is only used in conjunction with
# eventAssociation.maximumMatchingArrivalTimeDiff. If a station has multiple
# associated arrivals for a particular event, this flag defines if the time
# distance of a new pick to all arrivals must be within
# eventAssociation.maximumMatchingArrivalTimeDiff or if one matching arrival is
# enough.
eventAssociation.compareAllArrivalTimes = true

# Associates an Origin with an existing event if the Origin time differs not
# more than 60 seconds unless the minimumMatchingArrivals criteria matches.
eventAssociation.maximumTimeSpan = 10

# Allowed location difference between an incoming Origin compared with
# preferred Origins to get associated.
eventAssociation.maximumDistance = 2

# Magnitude type priority list for becoming a preferred magnitude for an event.
# Example:
# M, mBc, Mw(mB), Mwp, ML, MLh, MLv, mb
eventAssociation.magTypes = M, ML, MLh, MLv, Mwp, Md, mb

# Minimum number of station magnitudes referenced to a network magnitude to
# become a preferred magnitude.
eventAssociation.minimumMagnitudes = 1

# The general priority list to decide if an Origin becomes preferred. The
# priority decreases in the order of the parameters. This list is not used
# unless this parameter is activated.
# Empty priority list: scevent replicates the default hard wired behaviour:
# AGENCY, STATUS, PHASES_AUTOMATIC, TIME_AUTOMATIC
# Each item in the list corresponds to a check that is performed. Each check
# computes a score of the incoming Origin (s1) and the current preferred Origin
# (s2). If the s1 is lower than s2, the incoming Origin is rejected and does
# not become preferred. All subsequent checks are ignored. If s1 is equal to
# s2, the next check in the list is performed. If s1 is larger than s2, the
# Origin becomes preferred and all subsequent checks are ignored.
# Available tokens:
# AGENCY: check based on agency priorities
# AUTHOR: check based on author priorities
# MODE: evaluation mode priority: 0 = unset, 1 = automatic, 2 = manual, manual
# over-rules automatic
# STATUS: priority combined from evaluation status and evaluation mode: -100 =
# status is rejected, -1 = status is reported, 0 = status is preliminary or
# status is unset and mode is automatic, 1 = status is confirmed or status is
# unset and mode is manual, 2 = status is reviewed, 3 = status is final,
# METHOD: check based on the method priorities
# PHASES: higher phase count = higher priority
# PHASES_AUTOMATIC: only checks phase priorities for incoming automatic Origins
# RMS: lower rms = higher priority
# RMS_AUTOMATIC: only check RMS on incoming automatic Origins
# TIME: more recent Origins (creationTime) have higher priorities
# TIME_AUTOMATIC: only check creationTime priority on incoming automatic
# Origins
# SCORE: evaluates the score according to a configured ScoreProcessor and
# prefers the Origin/Focalmechanism with the highest score.
eventAssociation.priorities = AGENCY, STATUS, AUTHOR, RMS_AUTOMATIC, TIME

# The author priority list. When the eventtool comes to the point to select a
# preferred Origin based on AUTHOR it orders all Origins by its author priority
# and selects then the best one among the highest priority author. It also
# defines the author priority for custom priority checks
# (eventAssociation.priorities).
# The parameter is only considered when defined in "priorities".
eventAssociation.authors = earthworm
